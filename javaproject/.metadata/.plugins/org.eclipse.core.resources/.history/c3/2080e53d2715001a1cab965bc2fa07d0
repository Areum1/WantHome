package wantHome;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Fail extends JFrame {
	
//	private Image screenImage;
//	private Graphics screenGraphic;
//	
//	public static Image introBackground = new ImageIcon(Main.class.getResource("../images/FailBackground.png")).getImage();
//	
//	private ImageIcon stopButtonEnteredImage = new ImageIcon(Main.class.getResource("../images/StopButtonPressed.png"));
//	private ImageIcon stopButtonImage = new ImageIcon(Main.class.getResource("../images/StopButton.png"));
//	
//	private ImageIcon againButtonEnteredImage = new ImageIcon(Main.class.getResource("../images/AgainButtonPressed.png"));
//	private ImageIcon againButtonImage = new ImageIcon(Main.class.getResource("../images/AgainButton.png"));
//	
//	private JButton exitButton = new JButton(stopButtonImage);
//	private JButton againButton = new JButton(againButtonImage);
	
	Fail(){
		setTitle("새로 띄운 창");
        // 주의, 여기서 setDefaultCloseOperation() 정의를 하지 말아야 한다
        // 정의하게 되면 새 창을 닫으면 모든 창과 프로그램이 동시에 꺼진다
        
        JPanel NewWindowContainer = new JPanel();
        setContentPane(NewWindowContainer);
        
        JLabel NewLabel = new JLabel("새 창을 띄우는데 성공!");
        
        NewWindowContainer.add(NewLabel);
        
        setSize(300,100);
        setResizable(false);
        setVisible(true);


//		exitButton.setBounds(870, 2, 25, 25);
//		exitButton.setBorderPainted(false);
//		exitButton.setContentAreaFilled(false);
//		exitButton.setFocusPainted(false);
//		exitButton.addMouseListener(new MouseAdapter() {
//			@Override
//			public void mouseEntered(MouseEvent e) {
//				exitButton.setIcon(stopButtonEnteredImage);
//			}
//
//			@Override
//			public void mouseExited(MouseEvent e) {
//				exitButton.setIcon(stopButtonImage);
//			}
//
//			@Override
//			public void mousePressed(MouseEvent e) {
//				System.exit(0);
//			}
//		});
//		add(exitButton);
//		
//		againButton.setBounds(870, 2, 25, 25);
//		againButton.setBorderPainted(false);
//		againButton.setContentAreaFilled(false);
//		againButton.setFocusPainted(false);
//		againButton.addMouseListener(new MouseAdapter() {
//			@Override
//			public void mouseEntered(MouseEvent e) {
//				againButton.setIcon(againButtonEnteredImage);
//			}
//
//			@Override
//			public void mouseExited(MouseEvent e) {
//				againButton.setIcon(againButtonImage);
//			}
//
//			@Override
//			public void mousePressed(MouseEvent e) {
//				System.exit(0);
//			}
//		});
//		add(againButton);
	}
	public void paint(Graphics g) {
		screenImage = createImage(Main.SCREEN_WIDTH, Main.SCREEN_HEIGHT);
		screenGraphic = screenImage.getGraphics();
		screenDraw(screenGraphic);
		g.drawImage(screenImage, 0, 0, null);
	}

	public void screenDraw(Graphics g) {
		g.drawImage(introBackground, 0, 0, null);
		paintComponents(g);
		this.repaint();
	}
}
